<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hy.mapper.ActivityAnalysisMapper" >
  <resultMap id="BaseResultMap" type="com.hy.pojo.ActivityAnalysis" >
    <result column="campaign_name" property="campaignName" jdbcType="VARCHAR" />
    <result column="campaign_id" property="campaignId" jdbcType="VARCHAR" />
    <result column="start_date" property="startDate" jdbcType="TIMESTAMP" />
    <result column="end_date" property="endDate" jdbcType="TIMESTAMP" />
    <result column="cost" property="cost" jdbcType="DECIMAL" />
    <result column="monitor_rate" property="monitorRate" jdbcType="DECIMAL" />
    <result column="exposure_count" property="exposureCount" jdbcType="BIGINT" />
    <result column="exposure_user_count" property="exposureUserCount" jdbcType="BIGINT" />
    <result column="click_count" property="clickCount" jdbcType="BIGINT" />
    <result column="click_user_count" property="clickUserCount" jdbcType="BIGINT" />
    <result column="monthly_active_member_count" property="monthlyActiveMemberCount" jdbcType="BIGINT" />
    <result column="monthly_active_member_gmv" property="monthlyActiveMemberGmv" jdbcType="DECIMAL" />
    <result column="new_member_acquisition_count" property="newMemberAcquisitionCount" jdbcType="BIGINT" />
    <result column="new_member_acquisition_gmv" property="newMemberAcquisitionGmv" jdbcType="DECIMAL" />
    <result column="periodic_monthly_active_user_count" property="periodicMonthlyActiveUserCount" jdbcType="BIGINT" />
    <result column="periodic_monthly_active_user_gmv" property="periodicMonthlyActiveUserGmv" jdbcType="DECIMAL" />
    <result column="periodic_new_member_count" property="periodicNewMemberCount" jdbcType="BIGINT" />
    <result column="periodic_new_member_gmv" property="periodicNewMemberGmv" jdbcType="DECIMAL" />
    <result column="next_month_active_member_count" property="nextMonthActiveMemberCount" jdbcType="BIGINT" />
    <result column="next_month_active_member_gmv" property="nextMonthActiveMemberGmv" jdbcType="DECIMAL" />
    <result column="next_month_new_member_count" property="nextMonthNewMemberCount" jdbcType="BIGINT" />
    <result column="next_month_new_member_gmv" property="nextMonthNewMemberGmv" jdbcType="DECIMAL" />
    <result column="activity_type" property="activityType" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    campaign_name, campaign_id, start_date, end_date, cost, monitor_rate, exposure_count, 
    exposure_user_count, click_count, click_user_count, monthly_active_member_count, 
    monthly_active_member_gmv, new_member_acquisition_count, new_member_acquisition_gmv, 
    periodic_monthly_active_user_count, periodic_monthly_active_user_gmv, periodic_new_member_count, 
    periodic_new_member_gmv, next_month_active_member_count, next_month_active_member_gmv, 
    next_month_new_member_count, next_month_new_member_gmv, activity_type
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hy.pojo.ActivityAnalysisExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from activity_analysis
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.hy.pojo.ActivityAnalysisExample" >
    delete from activity_analysis
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hy.pojo.ActivityAnalysis" >
    insert into activity_analysis (campaign_name, campaign_id, start_date, 
      end_date, cost, monitor_rate, 
      exposure_count, exposure_user_count, click_count, 
      click_user_count, monthly_active_member_count, 
      monthly_active_member_gmv, new_member_acquisition_count, 
      new_member_acquisition_gmv, periodic_monthly_active_user_count, 
      periodic_monthly_active_user_gmv, periodic_new_member_count, 
      periodic_new_member_gmv, next_month_active_member_count, 
      next_month_active_member_gmv, next_month_new_member_count, 
      next_month_new_member_gmv, activity_type)
    values (#{campaignName,jdbcType=VARCHAR}, #{campaignId,jdbcType=VARCHAR}, #{startDate,jdbcType=TIMESTAMP}, 
      #{endDate,jdbcType=TIMESTAMP}, #{cost,jdbcType=DECIMAL}, #{monitorRate,jdbcType=DECIMAL}, 
      #{exposureCount,jdbcType=BIGINT}, #{exposureUserCount,jdbcType=BIGINT}, #{clickCount,jdbcType=BIGINT}, 
      #{clickUserCount,jdbcType=BIGINT}, #{monthlyActiveMemberCount,jdbcType=BIGINT}, 
      #{monthlyActiveMemberGmv,jdbcType=DECIMAL}, #{newMemberAcquisitionCount,jdbcType=BIGINT}, 
      #{newMemberAcquisitionGmv,jdbcType=DECIMAL}, #{periodicMonthlyActiveUserCount,jdbcType=BIGINT}, 
      #{periodicMonthlyActiveUserGmv,jdbcType=DECIMAL}, #{periodicNewMemberCount,jdbcType=BIGINT}, 
      #{periodicNewMemberGmv,jdbcType=DECIMAL}, #{nextMonthActiveMemberCount,jdbcType=BIGINT}, 
      #{nextMonthActiveMemberGmv,jdbcType=DECIMAL}, #{nextMonthNewMemberCount,jdbcType=BIGINT}, 
      #{nextMonthNewMemberGmv,jdbcType=DECIMAL}, #{activityType,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hy.pojo.ActivityAnalysis" >
    insert into activity_analysis
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="campaignName != null" >
        campaign_name,
      </if>
      <if test="campaignId != null" >
        campaign_id,
      </if>
      <if test="startDate != null" >
        start_date,
      </if>
      <if test="endDate != null" >
        end_date,
      </if>
      <if test="cost != null" >
        cost,
      </if>
      <if test="monitorRate != null" >
        monitor_rate,
      </if>
      <if test="exposureCount != null" >
        exposure_count,
      </if>
      <if test="exposureUserCount != null" >
        exposure_user_count,
      </if>
      <if test="clickCount != null" >
        click_count,
      </if>
      <if test="clickUserCount != null" >
        click_user_count,
      </if>
      <if test="monthlyActiveMemberCount != null" >
        monthly_active_member_count,
      </if>
      <if test="monthlyActiveMemberGmv != null" >
        monthly_active_member_gmv,
      </if>
      <if test="newMemberAcquisitionCount != null" >
        new_member_acquisition_count,
      </if>
      <if test="newMemberAcquisitionGmv != null" >
        new_member_acquisition_gmv,
      </if>
      <if test="periodicMonthlyActiveUserCount != null" >
        periodic_monthly_active_user_count,
      </if>
      <if test="periodicMonthlyActiveUserGmv != null" >
        periodic_monthly_active_user_gmv,
      </if>
      <if test="periodicNewMemberCount != null" >
        periodic_new_member_count,
      </if>
      <if test="periodicNewMemberGmv != null" >
        periodic_new_member_gmv,
      </if>
      <if test="nextMonthActiveMemberCount != null" >
        next_month_active_member_count,
      </if>
      <if test="nextMonthActiveMemberGmv != null" >
        next_month_active_member_gmv,
      </if>
      <if test="nextMonthNewMemberCount != null" >
        next_month_new_member_count,
      </if>
      <if test="nextMonthNewMemberGmv != null" >
        next_month_new_member_gmv,
      </if>
      <if test="activityType != null" >
        activity_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="campaignName != null" >
        #{campaignName,jdbcType=VARCHAR},
      </if>
      <if test="campaignId != null" >
        #{campaignId,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null" >
        #{startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="endDate != null" >
        #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="cost != null" >
        #{cost,jdbcType=DECIMAL},
      </if>
      <if test="monitorRate != null" >
        #{monitorRate,jdbcType=DECIMAL},
      </if>
      <if test="exposureCount != null" >
        #{exposureCount,jdbcType=BIGINT},
      </if>
      <if test="exposureUserCount != null" >
        #{exposureUserCount,jdbcType=BIGINT},
      </if>
      <if test="clickCount != null" >
        #{clickCount,jdbcType=BIGINT},
      </if>
      <if test="clickUserCount != null" >
        #{clickUserCount,jdbcType=BIGINT},
      </if>
      <if test="monthlyActiveMemberCount != null" >
        #{monthlyActiveMemberCount,jdbcType=BIGINT},
      </if>
      <if test="monthlyActiveMemberGmv != null" >
        #{monthlyActiveMemberGmv,jdbcType=DECIMAL},
      </if>
      <if test="newMemberAcquisitionCount != null" >
        #{newMemberAcquisitionCount,jdbcType=BIGINT},
      </if>
      <if test="newMemberAcquisitionGmv != null" >
        #{newMemberAcquisitionGmv,jdbcType=DECIMAL},
      </if>
      <if test="periodicMonthlyActiveUserCount != null" >
        #{periodicMonthlyActiveUserCount,jdbcType=BIGINT},
      </if>
      <if test="periodicMonthlyActiveUserGmv != null" >
        #{periodicMonthlyActiveUserGmv,jdbcType=DECIMAL},
      </if>
      <if test="periodicNewMemberCount != null" >
        #{periodicNewMemberCount,jdbcType=BIGINT},
      </if>
      <if test="periodicNewMemberGmv != null" >
        #{periodicNewMemberGmv,jdbcType=DECIMAL},
      </if>
      <if test="nextMonthActiveMemberCount != null" >
        #{nextMonthActiveMemberCount,jdbcType=BIGINT},
      </if>
      <if test="nextMonthActiveMemberGmv != null" >
        #{nextMonthActiveMemberGmv,jdbcType=DECIMAL},
      </if>
      <if test="nextMonthNewMemberCount != null" >
        #{nextMonthNewMemberCount,jdbcType=BIGINT},
      </if>
      <if test="nextMonthNewMemberGmv != null" >
        #{nextMonthNewMemberGmv,jdbcType=DECIMAL},
      </if>
      <if test="activityType != null" >
        #{activityType,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hy.pojo.ActivityAnalysisExample" resultType="java.lang.Integer" >
    select count(*) from activity_analysis
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update activity_analysis
    <set >
      <if test="record.campaignName != null" >
        campaign_name = #{record.campaignName,jdbcType=VARCHAR},
      </if>
      <if test="record.campaignId != null" >
        campaign_id = #{record.campaignId,jdbcType=VARCHAR},
      </if>
      <if test="record.startDate != null" >
        start_date = #{record.startDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endDate != null" >
        end_date = #{record.endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.cost != null" >
        cost = #{record.cost,jdbcType=DECIMAL},
      </if>
      <if test="record.monitorRate != null" >
        monitor_rate = #{record.monitorRate,jdbcType=DECIMAL},
      </if>
      <if test="record.exposureCount != null" >
        exposure_count = #{record.exposureCount,jdbcType=BIGINT},
      </if>
      <if test="record.exposureUserCount != null" >
        exposure_user_count = #{record.exposureUserCount,jdbcType=BIGINT},
      </if>
      <if test="record.clickCount != null" >
        click_count = #{record.clickCount,jdbcType=BIGINT},
      </if>
      <if test="record.clickUserCount != null" >
        click_user_count = #{record.clickUserCount,jdbcType=BIGINT},
      </if>
      <if test="record.monthlyActiveMemberCount != null" >
        monthly_active_member_count = #{record.monthlyActiveMemberCount,jdbcType=BIGINT},
      </if>
      <if test="record.monthlyActiveMemberGmv != null" >
        monthly_active_member_gmv = #{record.monthlyActiveMemberGmv,jdbcType=DECIMAL},
      </if>
      <if test="record.newMemberAcquisitionCount != null" >
        new_member_acquisition_count = #{record.newMemberAcquisitionCount,jdbcType=BIGINT},
      </if>
      <if test="record.newMemberAcquisitionGmv != null" >
        new_member_acquisition_gmv = #{record.newMemberAcquisitionGmv,jdbcType=DECIMAL},
      </if>
      <if test="record.periodicMonthlyActiveUserCount != null" >
        periodic_monthly_active_user_count = #{record.periodicMonthlyActiveUserCount,jdbcType=BIGINT},
      </if>
      <if test="record.periodicMonthlyActiveUserGmv != null" >
        periodic_monthly_active_user_gmv = #{record.periodicMonthlyActiveUserGmv,jdbcType=DECIMAL},
      </if>
      <if test="record.periodicNewMemberCount != null" >
        periodic_new_member_count = #{record.periodicNewMemberCount,jdbcType=BIGINT},
      </if>
      <if test="record.periodicNewMemberGmv != null" >
        periodic_new_member_gmv = #{record.periodicNewMemberGmv,jdbcType=DECIMAL},
      </if>
      <if test="record.nextMonthActiveMemberCount != null" >
        next_month_active_member_count = #{record.nextMonthActiveMemberCount,jdbcType=BIGINT},
      </if>
      <if test="record.nextMonthActiveMemberGmv != null" >
        next_month_active_member_gmv = #{record.nextMonthActiveMemberGmv,jdbcType=DECIMAL},
      </if>
      <if test="record.nextMonthNewMemberCount != null" >
        next_month_new_member_count = #{record.nextMonthNewMemberCount,jdbcType=BIGINT},
      </if>
      <if test="record.nextMonthNewMemberGmv != null" >
        next_month_new_member_gmv = #{record.nextMonthNewMemberGmv,jdbcType=DECIMAL},
      </if>
      <if test="record.activityType != null" >
        activity_type = #{record.activityType,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update activity_analysis
    set campaign_name = #{record.campaignName,jdbcType=VARCHAR},
      campaign_id = #{record.campaignId,jdbcType=VARCHAR},
      start_date = #{record.startDate,jdbcType=TIMESTAMP},
      end_date = #{record.endDate,jdbcType=TIMESTAMP},
      cost = #{record.cost,jdbcType=DECIMAL},
      monitor_rate = #{record.monitorRate,jdbcType=DECIMAL},
      exposure_count = #{record.exposureCount,jdbcType=BIGINT},
      exposure_user_count = #{record.exposureUserCount,jdbcType=BIGINT},
      click_count = #{record.clickCount,jdbcType=BIGINT},
      click_user_count = #{record.clickUserCount,jdbcType=BIGINT},
      monthly_active_member_count = #{record.monthlyActiveMemberCount,jdbcType=BIGINT},
      monthly_active_member_gmv = #{record.monthlyActiveMemberGmv,jdbcType=DECIMAL},
      new_member_acquisition_count = #{record.newMemberAcquisitionCount,jdbcType=BIGINT},
      new_member_acquisition_gmv = #{record.newMemberAcquisitionGmv,jdbcType=DECIMAL},
      periodic_monthly_active_user_count = #{record.periodicMonthlyActiveUserCount,jdbcType=BIGINT},
      periodic_monthly_active_user_gmv = #{record.periodicMonthlyActiveUserGmv,jdbcType=DECIMAL},
      periodic_new_member_count = #{record.periodicNewMemberCount,jdbcType=BIGINT},
      periodic_new_member_gmv = #{record.periodicNewMemberGmv,jdbcType=DECIMAL},
      next_month_active_member_count = #{record.nextMonthActiveMemberCount,jdbcType=BIGINT},
      next_month_active_member_gmv = #{record.nextMonthActiveMemberGmv,jdbcType=DECIMAL},
      next_month_new_member_count = #{record.nextMonthNewMemberCount,jdbcType=BIGINT},
      next_month_new_member_gmv = #{record.nextMonthNewMemberGmv,jdbcType=DECIMAL},
      activity_type = #{record.activityType,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <select id="findNewAnListYJH" resultMap="BaseResultMap" resultType="com.hy.pojo.ActivityAnalysis">
    select * from activity_analysis order by start_date desc;
  </select>

  <select id="getAlog" resultType="com.hy.pojo.Alog">
    SELECT
      ROUND(cost/exposure_count*1000,2) AS cpm,
      ROUND(monthly_active_member_gmv/cost,2) AS roi,
      ROUND(cost/monthly_active_member_count,2) AS cac,
      ROUND(monthly_active_member_count/periodic_monthly_active_user_count,2) AS mamcRate,
      ROUND(monthly_active_member_gmv/periodic_monthly_active_user_gmv,2) AS mamcGmvRate,
      ROUND(new_member_acquisition_gmv/cost,2) AS rnmRoi,
      ROUND(cost/new_member_acquisition_count,2) AS rnmCac,
      ROUND(new_member_acquisition_count/periodic_monthly_active_user_count,2) AS nmcRate,
      ROUND(new_member_acquisition_gmv/periodic_monthly_active_user_gmv,2) AS nmcGmvRate,
      ROUND(monthly_active_member_gmv/monthly_active_member_count,2) AS pcmaGmv,
      ROUND(next_month_active_member_gmv/next_month_active_member_count,2) AS mpcmaGmv,
      ROUND(new_member_acquisition_gmv/new_member_acquisition_count,2) AS pcnGmv,
      ROUND(next_month_new_member_gmv/next_month_new_member_count,2) AS panGmv,
      ROUND(next_month_active_member_count/monthly_active_member_count,2) AS masmRate,
      ROUND(next_month_new_member_count/new_member_acquisition_count,2) AS mrrRate
    FROM
      activity_analysis a
    WHERE
      a.campaign_id = #{cid}
  </select>
  
  <select id="selectAnByCid" resultMap="BaseResultMap" resultType="com.hy.pojo.ActivityAnalysis">
    select * from activity_analysis where campaign_id=#{cid}
  </select>

  <select id="getAlogAvg" resultType="com.hy.pojo.AlogAvg">
    SELECT
      ROUND(AVG(cost/exposure_count*1000),2) AS cpmAvg,
      ROUND(AVG(monthly_active_member_gmv/cost),2) AS roiAvg,
      ROUND(AVG(cost/monthly_active_member_count),2) AS cacAvg,
      ROUND(AVG(monthly_active_member_count/periodic_monthly_active_user_count),2) AS mamcRateAvg,
      ROUND(AVG(monthly_active_member_gmv/periodic_monthly_active_user_gmv),2) AS mamcGmvRateAvg,
      ROUND(AVG(new_member_acquisition_gmv/cost),2) AS rnmRoiAvg,
      ROUND(AVG(cost/new_member_acquisition_count),2) AS rnmCacAvg,
      ROUND(AVG(new_member_acquisition_count/periodic_monthly_active_user_count),2) AS nmcRateAvg,
      ROUND(AVG(new_member_acquisition_gmv/periodic_monthly_active_user_gmv),2) AS nmcGmvRateAvg,
      ROUND(AVG(monthly_active_member_gmv/monthly_active_member_count),2) AS pcmaGmvAvg,
      ROUND(AVG(next_month_active_member_gmv/next_month_active_member_count),2) AS mpcmaGmvAvg,
      ROUND(AVG(new_member_acquisition_gmv/new_member_acquisition_count),2) AS pcnGmvAvg,
      ROUND(AVG(next_month_new_member_gmv/next_month_new_member_count),2) AS panGmvAvg,
      ROUND(AVG(next_month_active_member_count/monthly_active_member_count),2) AS masmRateAvg,
      ROUND(AVG(next_month_new_member_count/new_member_acquisition_count),2) AS mrrRateAvg
    FROM
      activity_analysis a
    WHERE
      activity_type = (
        SELECT activity_type
        FROM activity_analysis
        WHERE campaign_id = #{cid}
      )
  </select>

  <select id="getConversionIncomeYJH" resultType="com.hy.pojo.ConversionIncome">
    SELECT
      cost,
      exposure_count AS exposureCount,
      exposure_user_count AS exposureUserCount,
      monthly_active_member_count AS monthlyActiveMemberCount,
      new_member_acquisition_count AS newMemberAcquisitionCount
    FROM
      activity_analysis
    WHERE
      campaign_id = #{cid};
  </select>

    <select id="findConversionIncomeAvg" resultType="com.hy.pojo.ConversionIncome">
      SELECT
        ROUND(SUM(monthly_active_member_count) / SUM(exposure_count),2) AS emacRateAvg,
        ROUND(SUM(new_member_acquisition_count) / SUM(exposure_count),2) AS etnccRateAvg
      FROM
        activity_analysis;
    </select>

  <select id="findConversionIncomeAvgUser" resultType="com.hy.pojo.ConversionIncome">
    SELECT
      ROUND(SUM(monthly_active_member_count) / SUM(exposure_user_count),2) AS emacRateAvg,
      ROUND(SUM(new_member_acquisition_count) / SUM(exposure_user_count),2) AS etnccRateAvg
    FROM
      activity_analysis;
  </select>
    <select id="findActivityCpm" resultMap="BaseResultMap" resultType="com.hy.pojo.ActivityAnalysis">
      select *,ROUND(cost/exposure_count*1000,2) AS cpm from activity_analysis
    </select>
</mapper>